using LinearAlgebra
using DppInference

R=randn(10,10)
L=Symmetric(R*R')
d=DPP(L)
sample_exact(d)
kd=kDPP(4,L)
sample_exact(kd)
pmf(d, [1,2])
pmf(kd, [1,2,3,4])

# use a big L
R=randn(20,20)
L=Symmetric(R*R')
d=DPP(L)
enumerate_map(d)
rand_approx_map(d)
mcmc_map(d)

# 3x3 L
R=randn(3,3)
L=Symmetric(R*R')
d=DPP(L)
cd = condition_include(d, [1])
viz_hist_exact(d)
enumerate_map(d)
viz_hist_exact(cd)

# use 10x10 L
R=randn(10,10)
L=Symmetric(R*R')
d=DPP(L)
viz_hist_exact(d)
viz_hist_mcmc(d)

using LinearAlgebra
using DppInference
R=randn(5,5)
L=Symmetric(R*R')
d = DPP(L)
Y = build_training_set(d, 100)
learn_ka(Y, 5, 100)


trueK = [[0.5007, -0.0929, 0.1171, 0.1593, -0.1895] [-0.0929, 0.7903, -0.026, 0.0762, -0.0361] [0.1171, -0.026, 0.7233, 0.0682, -0.061] [0.1593, 0.0762, 0.0682, 0.4133, 0.2248] [-0.1895, -0.0361, -0.061, 0.2248, 0.7673]]
trued = DPP(Symmetric(trueK/(I-trueK)))

EMK = [[0.5009, 0.1027, -0.0088, 0.1816, -0.1837] [0.1027, 0.7886, -0.0127, -0.0654, -0.0345] [-0.0088, -0.0127, 0.7184, -0.0848, -0.0627] [0.1816, -0.0654, -0.0848, 0.4113, 0.2083] [-0.1837, -0.0345, -0.0627, 0.2083, 0.7735]]
EMd = DPP(Symmetric(EMK/(I-EMK)))

KAK = [[0.494288, -0.0698576, 0.115778, -0.15632, -0.180831] [-0.0698576, 0.790675, 0.0238117, -0.0735606, -0.0350433] [0.115778, 0.0238117, 0.71984, -0.0257031, -0.073061] [-0.15632, -0.0735606, -0.0257031, 0.413018, -0.221824] [-0.180831, -0.0350433, -0.073061, -0.221824, 0.772435]]
KAd = DPP(Symmetric(KAK/(I-KAK)))